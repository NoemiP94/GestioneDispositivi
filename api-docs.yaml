openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:3001
  description: Generated server url
paths:
  /users/{id}:
    get:
      tags:
      - user-controller
      operationId: findUserById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionsDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionsDTO'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionsDTO'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
    put:
      tags:
      - user-controller
      operationId: findUserAndUpdate
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
        required: true
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionsDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionsDTO'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionsDTO'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
    delete:
      tags:
      - user-controller
      operationId: findUserAndDelete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionsDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionsDTO'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionsDTO'
        "204":
          description: No Content
  /devices/{id}:
    get:
      tags:
      - device-controller
      operationId: findDeviceById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionsDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionsDTO'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionsDTO'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Device'
    put:
      tags:
      - device-controller
      operationId: findDeviceAndUpdate
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceDTO'
        required: true
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionsDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionsDTO'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionsDTO'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Device'
    delete:
      tags:
      - device-controller
      operationId: findDeviceAndDelete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionsDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionsDTO'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionsDTO'
        "204":
          description: No Content
  /users:
    get:
      tags:
      - user-controller
      operationId: findAllUsers
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      - name: orderBy
        in: query
        required: false
        schema:
          type: string
          default: name
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionsDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionsDTO'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionsDTO'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageUser'
    post:
      tags:
      - user-controller
      operationId: saveUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
        required: true
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionsDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionsDTO'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionsDTO'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserResponseDTO'
  /users/{id}/upload:
    post:
      tags:
      - user-controller
      operationId: uploadAvatar
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              required:
              - avatar
              type: object
              properties:
                avatar:
                  type: string
                  format: binary
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionsDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionsDTO'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionsDTO'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /devices:
    get:
      tags:
      - device-controller
      operationId: findAllDevices
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      - name: orderBy
        in: query
        required: false
        schema:
          type: string
          default: idDevice
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionsDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionsDTO'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionsDTO'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageDevice'
    post:
      tags:
      - device-controller
      operationId: saveDevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceDTO'
        required: true
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionsDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionsDTO'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionsDTO'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeviceResponseDTO'
components:
  schemas:
    ExceptionsDTO:
      type: object
      properties:
        message:
          type: string
        time:
          type: string
          format: date-time
    UserDTO:
      required:
      - email
      - name
      - surname
      - username
      type: object
      properties:
        name:
          type: string
        surname:
          type: string
        username:
          type: string
        email:
          type: string
    User:
      type: object
      properties:
        idUser:
          type: string
          format: uuid
        name:
          type: string
        surname:
          type: string
        username:
          type: string
        email:
          type: string
        avatar:
          type: string
    DeviceDTO:
      required:
      - stato
      - tipo
      type: object
      properties:
        tipo:
          type: string
        stato:
          type: string
        userId:
          type: string
          format: uuid
    Device:
      type: object
      properties:
        idDevice:
          type: string
          format: uuid
        tipo:
          type: string
        stato:
          type: string
        user:
          $ref: '#/components/schemas/User'
    UserResponseDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
    DeviceResponseDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
    PageUser:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/User'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/SortObject'
        paged:
          type: boolean
        unpaged:
          type: boolean
        pageSize:
          type: integer
          format: int32
        pageNumber:
          type: integer
          format: int32
    SortObject:
      type: object
      properties:
        empty:
          type: boolean
        unsorted:
          type: boolean
        sorted:
          type: boolean
    PageDevice:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/Device'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
